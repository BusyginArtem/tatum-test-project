name: Build and Deploy

# Controls when the action will run.
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# 
permissions:
  contents: read
  pages: write
  id-token: write

env:
  REACT_APP_API_BASE_URL: '${{ secrets.REACT_APP_TATUM_API_KEY }}'

jobs:
  # Build Job
  Build:
    # if: github.event.pull_request.merged == true

    name: build job

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #
    strategy:
      matrix:
        node: [18]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout repository
        uses: actions/checkout@v3
      #
      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      # clean cache
      - name: clean cache
        run: npm cache clean --force

      # install app dependencies
      - name: install dependencies
        run: |
          npm install

      # run tests
      - name: run tests
        run: |
          npm run test

      # build the app
      - name: build
        run: |
          npm run build
        env:
          CI: false

      # save 
      - name: upload artifact in order to deploy
        uses: actions/upload-artifact@v3
        with: 
          name: production-files
          path: ./dist
          if-no-files-found: error

  # Deploy Job
  Deploy: 
    if: github.ref == 'refs/heads/main'

    name: deploy

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # only if the app build successfully
    needs: Build

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: download artifact - 1 step
        uses: actions/download-artifact@v3
        with: 
          name: production-files
          path: ./dist
          
      - name: setup pages - 2 step
        uses: actions/configure-pages@v4

      - name: upload artifact - 3 step
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder
          path: ./dist

      - name: deploy to GitHub pages - 4 step
        id: deployment
        uses: actions/deploy-pages@v4